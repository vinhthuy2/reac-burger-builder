{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","a","createElement","Object","assign","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Input","Label","label","module","exports","CheckoutSummary","ContactData","checkoutSummary","react_default","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","state","orderForm","name","type","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","_this","order","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","defineProperty","setState","_this2","this","formElementsArray","id","config","form","onSubmit","formElement","disabled","loading","Spinner","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","react_router","to","purchasedRedirect","purchased","CheckoutSummary_CheckoutSummary","path","match","component"],"mappings":"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","file":"static/js/3.a2ffd715.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport classes from './Input.css';\r\n\r\nconst input = props => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(classes.Invalid);\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case 'input':\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case 'textarea':\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case 'select':\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(' ')}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input_1VROp\",\"Label\":\"Input_Label_1tOSX\",\"InputElement\":\"Input_InputElement_3TB0k\",\"Invalid\":\"Input_Invalid_38X2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary_-avOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData_1whvJ\"};","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { updateObject, checkValidity } from '../../../shared/utility';\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Your Name'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      street: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Street'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      zipCode: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'ZIP Code'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 5,\r\n          isNumeric: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      country: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Country'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'email',\r\n          placeholder: 'Your E-Mail'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      deliveryMethod: {\r\n        elementType: 'select',\r\n        elementConfig: {\r\n          options: [\r\n            { value: 'fastest', displayValue: 'Fastest' },\r\n            { value: 'cheapest', displayValue: 'Cheapest' }\r\n          ]\r\n        },\r\n        value: 'fastest',\r\n        validation: {},\r\n        valid: true\r\n      }\r\n    },\r\n    formIsValid: false\r\n  };\r\n\r\n  orderHandler = event => {\r\n    event.preventDefault();\r\n\r\n    const formData = {};\r\n    for (let formElementIdentifier in this.state.orderForm) {\r\n      formData[formElementIdentifier] = this.state.orderForm[\r\n        formElementIdentifier\r\n      ].value;\r\n    }\r\n    const order = {\r\n      ingredients: this.props.ings,\r\n      price: this.props.price,\r\n      orderData: formData,\r\n      userId: this.props.userId\r\n    };\r\n\r\n    this.props.onOrderBurger(order, this.props.token);\r\n  };\r\n\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedFormElement = updateObject(\r\n      this.state.orderForm[inputIdentifier],\r\n      {\r\n        value: event.target.value,\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          this.state.orderForm[inputIdentifier].validation\r\n        ),\r\n        touched: true\r\n      }\r\n    );\r\n\r\n    const updatedOrderForm = updateObject(this.state.orderForm, {\r\n      [inputIdentifier]: updatedFormElement\r\n    });\r\n\r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key]\r\n      });\r\n    }\r\n    let form = (\r\n      <form onSubmit={this.orderHandler}>\r\n        {formElementsArray.map(formElement => (\r\n          <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={event => this.inputChangedHandler(event, formElement.id)}\r\n          />\r\n        ))}\r\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\r\n          ORDER\r\n        </Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return (\r\n      <div className={classes.ContactData}>\r\n        <h4>Enter your Contact Data</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onOrderBurger: (orderData, token) =>\r\n      dispatch(actions.purchaseBurger(orderData, token))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(ContactData, axios));\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n  checkoutCancelledHandler = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  checkoutContinuedHandler = () => {\r\n    this.props.history.replace('/checkout/contact-data');\r\n  };\r\n\r\n  render() {\r\n    let summary = <Redirect to=\"/\" />;\r\n    if (this.props.ings) {\r\n      const purchasedRedirect = this.props.purchased ? (\r\n        <Redirect to=\"/\" />\r\n      ) : null;\r\n      summary = (\r\n        <div>\r\n          {purchasedRedirect}\r\n          <CheckoutSummary\r\n            ingredients={this.props.ings}\r\n            checkoutCancelled={this.checkoutCancelledHandler}\r\n            checkoutContinued={this.checkoutContinuedHandler}\r\n          />\r\n          <Route\r\n            path={this.props.match.path + '/contact-data'}\r\n            component={ContactData}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return summary;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    purchased: state.order.purchased\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n"],"sourceRoot":""}